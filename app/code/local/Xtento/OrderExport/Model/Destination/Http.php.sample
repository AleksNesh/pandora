<?php

/**
 * Product:       Xtento_OrderExport (1.2.5)
 * ID:            GR6WnvnT6Ww3/JikLV7jXYKkCzueYchFmw1tJG+eutg=
 * Packaged:      2013-08-20T14:50:25+00:00
 * Last Modified: 2013-02-11T16:35:09+01:00
 * File:          app/code/local/Xtento/OrderExport/Model/Destination/Http.php.sample
 * Copyright:     Copyright (c) 2013 XTENTO GmbH & Co. KG <info@xtento.com> / All rights reserved.
 */

class Xtento_OrderExport_Model_Destination_Http extends Xtento_OrderExport_Model_Destination_Abstract
{
    /*
     * !!!!! IMPORTANT !!!!!
     *
     * Modify below this line. Add custom functions, similar to the function below. There MUST be one parameter which will contain the files which have been generated by the module in the format array($filename => $fileContent)
     */
    public function yourFunctionName($fileArray)
    {
        // Do whatever - sample code for a HTTP request below.
        foreach ($fileArray as $filename => $fileContent) {
            $curlClient = curl_init();
            curl_setopt($curlClient, CURLOPT_URL, '');
            curl_setopt($curlClient, CURLOPT_RETURNTRANSFER, 1);
            curl_setopt($curlClient, CURLOPT_POST, 1);
            curl_setopt($curlClient, CURLOPT_POSTFIELDS, $fileContent);
            curl_setopt($curlClient, CURLOPT_SSL_VERIFYPEER, 0);
            curl_setopt($curlClient, CURLOPT_SSL_VERIFYHOST, 0);
            $result = curl_exec($curlClient);
            curl_close($curlClient);
        }
    }

    /*
     * !!!!! Do not modify below this line !!!!!
     */
    public function testConnection()
    {
        $this->initConnection();
        if (!$this->getDestination()->getBackupDestination()) {
            $this->getDestination()->setLastResult($this->getTestResult()->getSuccess())->setLastResultMessage($this->getTestResult()->getMessage())->save();
        }
        return $this->getTestResult();
    }

    public function initConnection()
    {
        $this->setDestination(Mage::getModel('xtento_orderexport/destination')->load($this->getDestination()->getId()));
        $testResult = new Varien_Object();
        $this->setTestResult($testResult);
        if (!@method_exists($this, $this->getDestination()->getCustomFunction())) {
            $this->getTestResult()->setSuccess(false)->setMessage(Mage::helper('xtento_orderexport')->__('Custom function/method \'%s\' not found in %s.', $this->getDestination()->getCustomFunction(), __FILE__));
        } else {
            $this->getTestResult()->setSuccess(true)->setMessage(Mage::helper('xtento_orderexport')->__('Custom function/method found and ready to use.', __FILE__));
        }
        return true;
    }

    public function saveFiles($fileArray)
    {
        if (empty($fileArray)) {
            return array();
        }
        // Init connection
        $this->initConnection();
        // Call custom function
        @$this->{$this->getDestination()->getCustomFunction()}($fileArray);
        return array_keys($fileArray);
    }
}