<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     default_default
 * @copyright   Copyright (c) 2013 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>
<?php
$shippingMethod = $this->getShipment()->getOrder()->getShippingMethod();
$sizeSource = Mage::getModel('usa/shipping_carrier_usps_source_size')->toOptionArray();
$girthEnabled = Mage::helper('usa')->displayGirthValue($shippingMethod) && $this->isGirthAllowed() ? 1 : 0;
$insuranceAvailable = $this->insuranceAvailable();
$showEndicia = $this->showEndiciaShipping();
$defaultEndicia = $this->defaultSelectEndicia();
?>
<script type="text/javascript">
    //<![CDATA[
    document.observe("dom:loaded", function () {
        packaging = new Packaging(<?php echo $this->getConfigDataJson() ?>);
        packaging.changeContainerType($$('select[name=package_container]')[0]);
        packaging.checkSizeAndGirthParameter(
            $$('select[name=package_container]')[0],
            <?php echo $girthEnabled; ?>
        );
    });
    //]]>
</script>
<div id="popup-window-mask" style="display:none;"></div>
<div id="packaging_window" class="packaging-window" style="display:none;">
    <div class="entry-edit">
        <div class="entry-edit-head">
            <button type="button" class="scalable AddPackageBtn" onclick="packaging.newPackage();">
                <span><span><span><?php echo Mage::helper('sales')->__('Add Package') ?></span></span></span>
            </button>
            <h4 class="icon-head fieldset-legend"><?php echo Mage::helper('sales')->__('Create Packages') ?></h4>
        </div>
        <div class="packaging-content">
            <div class="messages" style="display:none;"></div>
            <div id="package_template" style="display:none;">
                <div class="package-number"><?php echo Mage::helper('sales')->__('Package') ?><span></span></div>
                <?php if ($showEndicia): ?>
                    <table class="endicia-shipping" name="endicia_shipping" id="endicia_shipping">
                        <thead>
                            <th colspan="2"><?php echo Mage::helper('wsaendicia')->__('Ship USPS via Endicia') ?></th>
                            <?php if ($insuranceAvailable): ?>
                                <th><?php echo Mage::helper('wsaendicia')->__('Insurance') ?></th>
                                <th><?php echo Mage::helper('wsaendicia')->__('Insured Value') ?></th>
                            <?php endif; ?>
                        </thead>
                        <tbody>
                            <td width="20px">
                               <input class="checkbox" type="checkbox" name="ship_with_endicia" id="ship_with_endicia" onclick="endiciaEnable();" <?php if ($defaultEndicia):?>checked='checked'<?php endif;?>>
                            </td>
                            <td>
                                <?php $shipMethods = $this->getEndiciaShippingMethods(); ?>
                                <select name="endicia_shipmethod" id="endicia_shipmethod" onchange='/*packaging.updateContainerTypes(this);*/'>
                                    <?php foreach ($shipMethods as $key => $value): ?>
                                        <option value="<?php echo $key ?>" <?php if ($defaultEndicia && $key == $this->getDefaultShipMethod()):?>selected="selected"<?php endif;?>>
                                            <?php echo $value ?>
                                        </option>
                                    <?php endforeach; ?>
                                </select>
                            </td>
                        <?php if ($insuranceAvailable): ?>
                            <td>
                                <select name="add_insurance" class="insurance-select" onchange="">
                                    <option value="0"
                                            selected="selected"><?php echo Mage::helper('sales')->__('No') ?></option>
                                    <option value="1"><?php echo Mage::helper('sales')->__('Yes') ?></option>
                                </select>
                            </td>
                            <td><input type="text" class="input-text insurance-value validate-greater-than-zero" name="insurance_value" value="<?php echo $this->getDefaultShipmentValue(); ?>"/>
                                <span class="customs-value-currency">[<?php echo $this->getCustomValueCurrencyCode(); ?>]</span>
                            </td>
                        <?php endif; ?>
                        </tbody>
                    </table>
                <?php endif; ?>
                <table class="package-options" cellspacing="0">
                    <thead>
                    <th><?php echo Mage::helper('sales')->__('Type') ?></th>
                    <?php if ($girthEnabled == 1): ?>
                        <th><?php echo Mage::helper('sales')->__('Size') ?></th>
                        <th><?php echo Mage::helper('sales')->__('Girth') ?></th>
                        <th>&nbsp;</th>
                    <?php endif; ?>
                    <th <?php echo $this->displayCustomsValue() ? '' : 'style="display: none;"' ?>>
                        <?php echo Mage::helper('sales')->__('Customs Value') ?>
                    </th>
                    <th><?php echo Mage::helper('sales')->__('Total Weight') ?></th>
                    <th><?php echo Mage::helper('sales')->__('Length') ?></th>
                    <th><?php echo Mage::helper('sales')->__('Width') ?></th>
                    <th><?php echo Mage::helper('sales')->__('Height') ?></th>
                    <th>&nbsp;</th>
                    <?php if ($this->getDeliveryConfirmationTypes()): ?>
                        <th><?php echo Mage::helper('sales')->__('Signature Confirmation') ?></th>
                    <?php endif; ?>
                    <th>&nbsp;</th>
                    <th>&nbsp;</th>
                    </thead>
                    <tbody>
                    <td>
                        <?php $containers = $this->getContainers(); ?>
                        <select name="package_container"
                                onchange="packaging.changeContainerType(this);packaging.checkSizeAndGirthParameter(this, <?php echo $girthEnabled ?>);"<?php if (empty($containers)): ?>
                            title="<?php echo Mage::helper('sales')->__('Package types are disregarded for USPS domestic shipments.') ?>"
                            disabled="" class="disabled"
                        <?php endif; ?>>
                            <?php foreach ($this->getContainers() as $key => $value): ?>
                                <option value="<?php echo $key ?>" <?php if ($defaultEndicia && $key == $this->getDefaultContainer()):?>selected="selected"<?php endif;?>>
                                    <?php echo $value ?>
                                </option>
                            <?php endforeach; ?>
                        </select>
                    </td>
                    <?php if ($girthEnabled == 1): ?>
                        <td>
                            <select name="package_size"
                                    onchange="packaging.checkSizeAndGirthParameter(this, <?php echo $girthEnabled ?>);">
                                <?php foreach ($sizeSource as $key => $value): ?>
                                    <option value="<?php echo $sizeSource[$key]['value'] ?>">
                                        <?php echo $sizeSource[$key]['label'] ?>
                                    </option>
                                <?php endforeach; ?>
                            </select>
                        </td>
                        <td><input type="text" class="input-text validate-greater-than-zero" name="container_girth"/>
                        </td>
                        <td>
                            <select name="container_girth_dimension_units" class="options-units-dimensions measures"
                                    onchange="packaging.changeMeasures(this);">
                                <option value="<?php echo Zend_Measure_Length::INCH ?>"
                                        selected="selected"><?php echo Mage::helper('sales')->__('in') ?></option>
                                <option
                                    value="<?php echo Zend_Measure_Length::CENTIMETER ?>"><?php echo Mage::helper('sales')->__('cm') ?></option>
                            </select>
                        </td>
                    <?php endif; ?>
                    <?php
                    if ($this->displayCustomsValue()) {
                        $customsValueDisplay = '';
                        $customsValueValidation = ' validate-zero-or-greater ';
                    } else {
                        $customsValueDisplay = ' style="display: none;" ';
                        $customsValueValidation = '';
                    }
                    ?>
                    <td <?php echo $customsValueDisplay ?>>
                        <input type="text" class="customs-value input-text <?php echo $customsValueValidation ?>"
                               name="package_customs_value"/>
                        <span class="customs-value-currency">[<?php echo $this->getCustomValueCurrencyCode(); ?>]</span>
                    </td>
                    <td>
                        <input type="text" class="options-weight input-text required-entry validate-greater-than-zero"
                               name="container_weight" value="10"/>
                        <select name="container_weight_units" class="options-units-weight measures"
                                onchange="packaging.changeMeasures(this);">
                            <option value="<?php echo Zend_Measure_Weight::POUND ?>"
                                    selected="selected"><?php echo Mage::helper('sales')->__('lb') ?></option>
                            <option
                                value="<?php echo Zend_Measure_Weight::KILOGRAM ?>"><?php echo Mage::helper('sales')->__('kg') ?></option>
                            <option
                                value="<?php echo Zend_Measure_Weight::OUNCE ?>"><?php echo Mage::helper('sales')->__('oz') ?></option>
                        </select>
                    </td>
                    <td>
                        <input type="text" class="input-text validate-greater-than-zero" name="container_length"/>
                    </td>
                    <td>
                        <input type="text" class="input-text validate-greater-than-zero" name="container_width"/>
                    </td>
                    <td>
                        <input type="text" class="input-text validate-greater-than-zero" name="container_height"/>
                    </td>
                    <td>
                        <select name="container_dimension_units" class="options-units-dimensions measures"
                                onchange="packaging.changeMeasures(this);">
                            <option value="<?php echo Zend_Measure_Length::INCH ?>"
                                    selected="selected"><?php echo Mage::helper('sales')->__('in') ?></option>
                            <option
                                value="<?php echo Zend_Measure_Length::CENTIMETER ?>"><?php echo Mage::helper('sales')->__('cm') ?></option>
                        </select>
                    </td>
                    <?php if ($this->getDeliveryConfirmationTypes()): ?>
                        <td>
                            <select name="delivery_confirmation_types">
                                <?php foreach ($this->getDeliveryConfirmationTypes() as $key => $value): ?>
                                    <option value="<?php echo $key ?>">
                                        <?php echo $value ?>
                                    </option>
                                <?php endforeach; ?>
                            </select>
                        </td>
                    <?php endif; ?>
                    <td>
                        <button type="button" class="scalable AddItemsBtn" onclick="packaging.getItemsForPack(this);">
                            <span><span><span><?php echo Mage::helper('sales')->__('Add Products') ?></span></span></span>
                        </button>
                    </td>
                    <td>
                        <button type="button" class="scalable DeletePackageBtn"
                                onclick="packaging.deletePackage(this);">
                            <span><span><span><?php echo Mage::helper('sales')->__('Delete Package') ?></span></span></span>
                        </button>
                    </td>
                    </tbody>
                </table>

                <?php if ($this->getContentTypes()): ?>
                    <table class="package-options package-options-contents" cellspacing="0">
                        <colgroup>
                            <col width="150">
                            <col width="*">
                        </colgroup>
                        <thead>
                        <th><?php echo Mage::helper('sales')->__('Contents') ?></th>
                        <th><?php echo Mage::helper('sales')->__('Explanation') ?></th>
                        </thead>
                        <tbody>
                        <td>
                            <select name="content_type" onchange="packaging.changeContentTypes(this);">
                                <?php foreach ($this->getContentTypes() as $key => $value): ?>
                                    <option value="<?php echo $key ?>">
                                        <?php echo $value ?>
                                    </option>
                                <?php endforeach; ?>
                            </select>
                        </td>
                        <td>
                            <input name="content_type_other" type="text"
                                   class="input-text options-content-type disabled" disabled="disabled"/>
                        </td>
                        </tbody>
                    </table>
                <?php endif; ?>

                <div class="package-add-products">
                    <div class="package_prapare" style="display:none">
                        <div class="entry-edit-head">
                            <button type="button" class="scalable AddSelectedBtn" onclick="packaging.packItems(this);">
                                <span><span><span><?php echo Mage::helper('sales')->__('Add Selected Product(s) to Package') ?></span></span></span>
                            </button>
                            <h4><?php echo Mage::helper('sales')->__('Please Select Products to Add') ?></h4>
                        </div>
                        <div class="grid_prepare"></div>
                    </div>
                </div>
            </div>
            <div id="packages_content"></div>
        </div>
        <div class="buttons-set a-right">
            <button type="button" class="scalable disabled SavePackagesBtn" disabled="disabled"
                    onclick="packaging.confirmPackaging();"
                    title="<?php echo Mage::helper('sales')->__('Products should be added to package(s)') ?>">
                <span><span><span><?php echo Mage::helper('sales')->__('OK') ?></span></span></span>
            </button>
            <button type="button" class="scalable" onclick="packaging.cancelPackaging();">
                <span><span><span><?php echo Mage::helper('sales')->__('Cancel') ?></span></span></span>
            </button>
        </div>
    </div>
</div>
<script type="text/javascript">
    //<![CDATA[


    Packaging.prototype.sendCreateLabelRequest  = Packaging.prototype.sendCreateLabelRequest.wrap(function(parentMethod){

        var package = this;
        if (!this.validate()) {
            this.messages.show().update(this.validationErrorMsg);
            return;
        } else {
            this.messages.hide().update();
        }
        if (this.createLabelUrl) {
            var weight, length, width, height = null;
            var packagesParams = [];
            this.packagesContent.childElements().each(function(pack) {
                var packageId = pack.id.match(/\d$/)[0];
                weight = parseFloat(pack.select('input[name="container_weight"]')[0].value);
                length = parseFloat(pack.select('input[name="container_length"]')[0].value);
                width = parseFloat(pack.select('input[name="container_width"]')[0].value);
                height = parseFloat(pack.select('input[name="container_height"]')[0].value);
                packagesParams[packageId] = {
                    container:                  pack.select('select[name="package_container"]')[0].value,
                    customs_value:              parseFloat(pack.select('input[name="package_customs_value"]')[0].value, 10),
                    weight:                     isNaN(weight) ? '' : weight,
                    length:                     isNaN(length) ? '' : length,
                    width:                      isNaN(width) ? '' : width,
                    height:                     isNaN(height) ? '' : height,
                    weight_units:               pack.select('select[name="container_weight_units"]')[0].value,
                    dimension_units:            pack.select('select[name="container_dimension_units"]')[0].value
                };
                if (isNaN(packagesParams[packageId]['customs_value'])) {
                    packagesParams[packageId]['customs_value'] = 0;
                }
                if ('undefined' != typeof pack.select('select[name="package_size"]')[0]) {
                    if ('' != pack.select('select[name="package_size"]')[0].value) {
                        packagesParams[packageId]['size'] = pack.select('select[name="package_size"]')[0].value;
                    }
                }
                if ('undefined' != typeof pack.select('input[name="container_girth"]')[0]) {
                    if ('' != pack.select('input[name="container_girth"]')[0].value) {
                        packagesParams[packageId]['girth'] = pack.select('input[name="container_girth"]')[0].value;
                        packagesParams[packageId]['girth_dimension_units'] = pack.select('select[name="container_girth_dimension_units"]')[0].value;
                    }
                }
                if ('undefined' != typeof pack.select('select[name="content_type"]')[0] && 'undefined' != typeof pack.select('input[name="content_type_other"]')[0]) {
                    packagesParams[packageId]['content_type'] = pack.select('select[name="content_type"]')[0].value;
                    packagesParams[packageId]['content_type_other'] = pack.select('input[name="content_type_other"]')[0].value;
                } else {
                    packagesParams[packageId]['content_type'] = '';
                    packagesParams[packageId]['content_type_other'] = '';
                }
                var deliveryConfirmation = pack.select('select[name="delivery_confirmation_types"]');
                if (deliveryConfirmation.length) {
                    packagesParams[packageId]['delivery_confirmation'] =  deliveryConfirmation[0].value
                }
                var insuranceRequired = pack.select('select[name="add_insurance"]');
                if(insuranceRequired.length) {
                    packagesParams[packageId]['add_insurance'] = insuranceRequired[0].value;
                    var insuranceValue = pack.select('input[name="insurance_value"]');
                    if(insuranceValue.length) {
                        packagesParams[packageId]['insurance_value'] = insuranceValue[0].value;
                    }
                }
                var useEndicia = pack.select('input[name="ship_with_endicia"]');
                if(useEndicia.length) {
                    if(useEndicia[0].checked) {
                        packagesParams[packageId]['use_endicia'] = useEndicia[0].checked;
                    }
                }
                var endiciaShipMethod = pack.select('select[name="endicia_shipmethod"]');
                if(endiciaShipMethod.length) {
                    if(endiciaShipMethod[0].value != '') {
                        packagesParams[packageId]['endicia_shipmethod'] = endiciaShipMethod[0].value;
                    }
                }
            }.bind(this));
            for (var packageId in this.packages) {
                if (!isNaN(packageId)) {
                    this.paramsCreateLabelRequest['packages['+packageId+']'+'[params]'+'[container]']              = packagesParams[packageId]['container'];
                    this.paramsCreateLabelRequest['packages['+packageId+']'+'[params]'+'[weight]']                 = packagesParams[packageId]['weight'];
                    this.paramsCreateLabelRequest['packages['+packageId+']'+'[params]'+'[customs_value]']          = packagesParams[packageId]['customs_value'];
                    this.paramsCreateLabelRequest['packages['+packageId+']'+'[params]'+'[length]']                 = packagesParams[packageId]['length'];
                    this.paramsCreateLabelRequest['packages['+packageId+']'+'[params]'+'[width]']                  = packagesParams[packageId]['width'];
                    this.paramsCreateLabelRequest['packages['+packageId+']'+'[params]'+'[height]']                 = packagesParams[packageId]['height'];
                    this.paramsCreateLabelRequest['packages['+packageId+']'+'[params]'+'[weight_units]']           = packagesParams[packageId]['weight_units'];
                    this.paramsCreateLabelRequest['packages['+packageId+']'+'[params]'+'[dimension_units]']        = packagesParams[packageId]['dimension_units'];
                    this.paramsCreateLabelRequest['packages['+packageId+']'+'[params]'+'[content_type]']           = packagesParams[packageId]['content_type'];
                    this.paramsCreateLabelRequest['packages['+packageId+']'+'[params]'+'[content_type_other]']     = packagesParams[packageId]['content_type_other'];

                    if ('undefined' != typeof packagesParams[packageId]['size']) {
                        this.paramsCreateLabelRequest['packages['+packageId+']'+'[params]'+'[size]'] = packagesParams[packageId]['size'];
                    }

                    if ('undefined' != typeof packagesParams[packageId]['girth']) {
                        this.paramsCreateLabelRequest['packages['+packageId+']'+'[params]'+'[girth]'] = packagesParams[packageId]['girth'];
                        this.paramsCreateLabelRequest['packages['+packageId+']'+'[params]'+'[girth_dimension_units]'] = packagesParams[packageId]['girth_dimension_units'];
                    }

                    if ('undefined' != typeof packagesParams[packageId]['delivery_confirmation']) {
                        this.paramsCreateLabelRequest['packages['+packageId+']'+'[params]'+'[delivery_confirmation]']  = packagesParams[packageId]['delivery_confirmation'];
                    }
                    if ('undefined' != typeof packagesParams[packageId]['add_insurance']) {
                        this.paramsCreateLabelRequest['packages['+packageId+']'+'[params]'+'[add_insurance]']  = packagesParams[packageId]['add_insurance'];
                    }
                    if('undefined' != typeof packagesParams[packageId]['insurance_value']) {
                        this.paramsCreateLabelRequest['packages['+packageId+']'+'[params]'+'[insurance_value]']  = packagesParams[packageId]['insurance_value'];
                    }
                    if('undefined' != typeof packagesParams[packageId]['endicia_shipmethod']) {
                        this.paramsCreateLabelRequest['packages['+packageId+']'+'[params]'+'[endicia_shipmethod]']  = packagesParams[packageId]['endicia_shipmethod'];
                    }
                    if('undefined' != typeof packagesParams[packageId]['use_endicia']) {
                        this.paramsCreateLabelRequest['packages['+packageId+']'+'[params]'+'[use_endicia]']  = packagesParams[packageId]['use_endicia'];
                    }
                    for (var packedItemId in this.packages[packageId]['items']) {
                        if (!isNaN(packedItemId)) {
                            this.paramsCreateLabelRequest['packages['+packageId+']'+'[items]'+'['+packedItemId+'][qty]']           = this.packages[packageId]['items'][packedItemId]['qty'];
                            this.paramsCreateLabelRequest['packages['+packageId+']'+'[items]'+'['+packedItemId+'][customs_value]'] = this.packages[packageId]['items'][packedItemId]['customs_value'];
                            this.paramsCreateLabelRequest['packages['+packageId+']'+'[items]'+'['+packedItemId+'][price]']         = package.defaultItemsPrice[packedItemId];
                            this.paramsCreateLabelRequest['packages['+packageId+']'+'[items]'+'['+packedItemId+'][name]']          = package.defaultItemsName[packedItemId];
                            this.paramsCreateLabelRequest['packages['+packageId+']'+'[items]'+'['+packedItemId+'][weight]']        = package.defaultItemsWeight[packedItemId];
                            this.paramsCreateLabelRequest['packages['+packageId+']'+'[items]'+'['+packedItemId+'][product_id]']    = package.defaultItemsProductId[packedItemId];
                            this.paramsCreateLabelRequest['packages['+packageId+']'+'[items]'+'['+packedItemId+'][order_item_id]'] = package.defaultItemsOrderItemId[packedItemId];
                        }
                    }
                }
            }

            new Ajax.Request(this.createLabelUrl, {
                parameters: this.paramsCreateLabelRequest,
                onSuccess: function(transport) {
                    var response = transport.responseText;
                    if (response.isJSON()) {
                        response = response.evalJSON();
                        if (response.error) {
                            this.messages.show().innerHTML = response.message;
                        } else if (response.ok && Object.isFunction(this.labelCreatedCallback)) {
                            this.labelCreatedCallback(response);
                        }
                    }
                }.bind(this)
            });
            if (this.paramsCreateLabelRequest['code']
                && this.paramsCreateLabelRequest['carrier_title']
                && this.paramsCreateLabelRequest['method_title']
                && this.paramsCreateLabelRequest['price']
                ) {
                var a = this.paramsCreateLabelRequest['code'];
                var b = this.paramsCreateLabelRequest['carrier_title'];
                var c = this.paramsCreateLabelRequest['method_title'];
                var d = this.paramsCreateLabelRequest['price'];

                this.paramsCreateLabelRequest = {};
                this.paramsCreateLabelRequest['code']           = a;
                this.paramsCreateLabelRequest['carrier_title']  = b;
                this.paramsCreateLabelRequest['method_title']   = c;
                this.paramsCreateLabelRequest['price']          = d;
            } else {
                this.paramsCreateLabelRequest = {};
            }
        }
    });

    Packaging.prototype.changeContainerType  = Packaging.prototype.changeContainerType.wrap(function(parentMethod, obj)
    {
        if (this.customizableContainers.length <= 0) {
            return;
        }

        var disable = true;
        for (var i in this.customizableContainers) {
            if (this.customizableContainers[i] == obj.value) {
                disable = false;
                break;
            }
        }

        var currentNode = obj;
        while (currentNode.nodeName != 'TBODY') {
            currentNode = currentNode.parentNode;
        }
        if (!currentNode) {
            return;
        }

        $(currentNode).select(
                'input[name=container_length],input[name=container_width],input[name=container_height],select[name=container_dimension_units]'
            ).each(function(inputElement) {
                if (disable) {
                    Form.Element.disable(inputElement);
                    inputElement.addClassName('disabled');
                    if (inputElement.nodeName == 'INPUT') {
                        $(inputElement).value = ''
                    }
                } else {
                    if(inputElement.name == 'container_length') {
                        var defaultLength = '<?php echo $this->getDefaultLength(); ?>';
                        if(defaultLength != 'false') {
                            inputElement.value = defaultLength;
                        }
                    }

                    if(inputElement.name == 'container_width') {
                        var defaultWidth = '<?php echo $this->getDefaultWidth(); ?>';
                        if(defaultWidth != 'false') {
                            inputElement.value = defaultWidth;
                        }
                    }

                    if(inputElement.name == 'container_height') {
                        var defaultHeight = '<?php echo $this->getDefaultHeight(); ?>';
                        if(defaultHeight != 'false') {
                            inputElement.value = defaultHeight;
                        }
                    }

                    Form.Element.enable(inputElement);
                    inputElement.removeClassName('disabled');
                }
            })
    });


    Packaging.prototype.updateContainerTypes = function updateContainerTypes(obj) {
        var selectedShipMethod = obj.value;

        var self = this;

        var shipCountry = 'US';
        var storeId = '1';

        var containers_url =  "<?php echo $this->getUrl('wsaendicia/shipment/retrieveContainerTypes', array('_secure'=>true)) ?>";
        var request = new Ajax.Request(
            containers_url,
            {
                method: 'get',
                onComplete: function(transport) {
                    self.addNewContainers(transport, obj);
                },
                parameters: {shipping_method: selectedShipMethod, country_recipient: shipCountry, store_id: storeId}
            }
        );

    };

    Packaging.prototype.addNewContainers = function(transport, obj)
    {

        var results = transport.responseText.evalJSON();

        var data = results.container_types;

        if (data != false) {
            var currentNode = obj;
            while (currentNode.nodeName != 'DIV' && currentNode.id != 'package_template') {
                currentNode = currentNode.parentNode;
            }
            if (!currentNode) {
                return;
            }

            $(currentNode).select(
                    'select[name=package_container]'
                ).each(function(inputElement) {
                    if(inputElement.name == 'package_container') {
                        inputElement.options.length = 0;

                        var preselectedContainer = inputElement.value;
                        var found = false;
                        var firstValue = false;
                        for (var code in data) {
                            var label = data[code];
                            inputElement.add(new Option(label, code));
                            if(code == preselectedContainer) {
                                found = true;
                            }
                            if(!firstValue) {
                                firstValue = code;
                            }
                        }

                        if(preselectedContainer != '' && found) {
                            inputElement.value = preselectedContainer;
                        }
                        else {
                            inputElement.value = firstValue;
                        }
                        inputElement.click;
                    }
                })
        }
    };


    function endiciaEnable()
    {
        var select = document.getElementById('endicia_shipmethod');
        select.toggleClassName('required-entry');
    }

</script>
